import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { collection, addDoc, getDocs, query, where } from "firebase/firestore";
import { db } from "../firebaseConfig";
import React, { useState, useEffect } from "react";
import Header from "../components/header";
import CategoryDisplay from "../components/categoryDisplay";
import JSDisplay from "../components/JSDisplay";
import WebDevDisplay from "../components/WebDevDisplay";
import useFavorites from "../hooks/useFavorites";

export default function Home({ links, categories, webDev }) {
  const count = "124";
  const title = "Tools for Web Developers and Veterans";
  const description =
    "Curated for quality then meticulously organized and regularly maintained for your browsing pleasure by Michael White.";

  return (
    <div className={``}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header count={count} title={title} description={description} />
      {links ? (
        <div className="flex flex-row justify-between w-full relative">
          <div className="flex flex-col sticky left-0 top-0 h-screen">
            <CategoryDisplay categories={categories} />
          </div>
          <main className={`px-2 flex flex-row justify-end items-center`}>
            <div className="flex flex-col">
              <JSDisplay links={links} />
              <WebDevDisplay webDev={webDev} />
            </div>
          </main>
        </div>
      ) : (
        <p>loading</p>
      )}
      <footer className={styles.footer}></footer>
    </div>
  );
}

export async function getStaticProps() {
  let links = [];
  let categories = [];
  let webDev = [];

  const q = await query(
    collection(db, "links"),
    where("category", "==", "javascript")
  );
  const querySnapshot = await getDocs(q);

  querySnapshot.forEach((doc) => {
    links.push({
      name: doc.data().name,
      _id: doc.id,
      description: doc.data().description,
      img: doc.data().img,
      loved: doc.data().loved,
      category: doc.data().category,
    });
  });

  const webDevLinks = await query(
    collection(db, "links"),
    where("category", "==", "web development")
  );
  const webDevLinksSnapshot = await getDocs(webDevLinks);

  webDevLinksSnapshot.forEach((doc) => {
    webDev.push({
      name: doc.data().name,
      _id: doc.id,
      description: doc.data().description,
      img: doc.data().img,
      loved: doc.data().loved,
      category: doc.data().category,
    });
  });

  const catSnapshot = await getDocs(collection(db, "category"));
  catSnapshot.forEach((doc) => {
    categories.push({
      name: doc.data().name,
      img: doc.data().img,
      _id: doc.id,
    });
  });

  return {
    props: {
      links,
      categories,
      webDev,
    },
  };
}
